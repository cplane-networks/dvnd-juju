# liberty
###############################################################################
# [ WARNING ]
# Configuration file maintained by Juju. Local changes may be overwritten.
# Restart trigger {{ restart_trigger }}
###############################################################################
[DEFAULT]
verbose = {{ verbose }}
debug = {{ debug }}
use_syslog = False 
state_path = /var/lib/neutron
auth_strategy = keystone
{% if transport_url %}
transport_url = {{ transport_url }}
{% endif %}


router_distributed = {{ enable_dvr }}

l3_ha = {{ l3_ha }}
{% if l3_ha -%}
max_l3_agents_per_router = {{ max_l3_agents_per_router }}
min_l3_agents_per_router = {{ min_l3_agents_per_router }}
{% endif -%}

{% if neutron_bind_port -%}
bind_port = {{ neutron_bind_port }}
{% else -%}
bind_port = 9696
{% endif -%}

{% if api_extensions_path -%}
api_extensions_path = {{ api_extensions_path }}
{% endif -%}

core_plugin = ml2 
{% if service_plugins -%}
service_plugins = {{ service_plugins }}
{% else -%}
{% if neutron_plugin in ['ovs', 'ml2', 'Calico'] -%}
service_plugins = router,firewall,lbaas,vpnaas,metering
{% elif neutron_plugin == 'midonet' -%}
service_plugins = lbaas
{% endif -%}
{% endif -%}

{% if neutron_security_groups -%}
allow_overlapping_ips = True
{% if neutron_plugin == 'Calico' -%}
neutron_firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver
{% elif neutron_plugin != 'midonet' -%}
neutron_firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
{% endif -%}
{% endif -%}

dhcp_agents_per_network = {{ dhcp_agents_per_network }}

notify_nova_on_port_status_changes = True
notify_nova_on_port_data_changes = True

{% if sections and 'DEFAULT' in sections -%}
{% for key, value in sections['DEFAULT'] -%}
{{ key }} = {{ value }}
{% endfor -%}
{% endif %}

{% include "section-zeromq" %}

[quotas]

[agent]
root_helper = sudo /usr/bin/neutron-rootwrap /etc/neutron/rootwrap.conf

{% include "section-keystone-authtoken" %}

{% include "section-database" %}

{% include "section-rabbitmq-oslo" %}

[oslo_concurrency]
lock_path = $state_path/lock

{% include "section-nova" %}

